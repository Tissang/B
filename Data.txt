Проектирование основного алгоритма
Начало – авторизация – данные введены корректно – создание заявки – данные введены корректно – добавление со статусом в ожидании – прикрепление работ с исполнителями – статус в работе – выполнение работ по заявке – продление срока сдачи заявки – статус выполнено – отчет-выдача – qr – статистика
Подсчет заявок со статусом выполнено
Начало – получение заявок – счетчик 0 – проход по полученным заявкам – заявка выполнено – увеличение счетчика на 1 – вывод значения счетчика
Дизайн
Лого - Авторизация - Меню создать ред список выйти - редакт менедж id вид ремонта исполнитель продлить работу описание сохранить добавить удалить - выполнение работ исп id принять дата выполнить дата комментарий - редактирование заявки админ id вид ремонта исполнитель описание сохранить добавить удалить - формирование заявки ФИО телефон почта оборудование с/н описание  комментарий - все заявки

public MainWindow()
{
    InitializeComponent();
    frame.Content = new SplashPage();
    frame.NavigationUIVisibility = NavigationUIVisibility.Hidden;
}
 <Grid>
     <Frame x:Name="frame"/>
 </Grid>
----------------------
public partial class SplashPage : Page
{
    private DispatcherTimer timer;
    public SplashPage()
    {
        InitializeComponent();
        timer = new DispatcherTimer();
        timer.Interval=TimeSpan.FromSeconds(5);
        timer.Tick += Timer_tick;
        timer.Start();
    }
    private void Timer_tick(object sender, EventArgs e)
    {
        timer.Stop();
        NavigationService.Navigate(new SignInPage());
    }
   
}
---------------
<Grid>
    <Button Content="Назад" HorizontalAlignment="Left" Margin="10,406,0,0" VerticalAlignment="Top" Width="82" Height="34"/>
    <DataGrid Name ="Data" Margin="0,100,0,49" AutoGenerateColumns="True">
        <DataGrid.Columns>
            <DataGridTextColumn Header="Id" Binding="{Binding Request_Id}"></DataGridTextColumn>
            
        </DataGrid.Columns>
        
    </DataGrid>
    <Label Content="Все заявки" HorizontalAlignment="Center" Margin="0,28,0,0" VerticalAlignment="Top" Height="72" Width="255" FontSize="50"/>
</Grid>
----------------------
private void Login_button_Click(object sender, RoutedEventArgs e)
{
    try
    {
        string stroka_conn = "Data Source=\"10.118.95.29, 1433\";Initial Catalog=User_02_02;User ID=User_02_02;Password=#3e2w1q";
        using (SqlConnection conn = new SqlConnection(stroka_conn))
        {
            conn.Open();

            string str_query = "SELECT * FROM [User]";
            using (SqlCommand sqlCommand = new SqlCommand(str_query, conn))
            using (SqlDataReader reader = sqlCommand.ExecuteReader())
            {
                while (reader.Read())
                {
                    if (reader[2].ToString() == Login_box.Text && reader[3].ToString() == Password_box.Text)
                    {
                        if (int.Parse(reader[1].ToString()) == 1)
                            NavigationService.Navigate(new Main_page());
                        else
                            NavigationService.Navigate(new Vipoln_page());

                        return;
                    }
                }

                MessageBox.Show("Пользователь не найден. Проверьте логин и пароль.", "Ошибка входа", MessageBoxButton.OK, MessageBoxImage.Error);
            }
        }
    }
    catch (Exception ex)
    {
        MessageBox.Show("Произошла ошибка: " + ex.Message, "Ошибка", MessageBoxButton.OK, MessageBoxImage.Error);
    }
}
--------------------------------------
Equipment ID Name
Status ID Name
User ID RoleId Fio Login Password
Role Id Name
Job Id Name
RequestJob Id RequestId JobId ContractorId StatusId
Request Id EqupmentId StatusId Fio Phone Email Sn Desc Comment Start End

Request - Eq 
Req - St
RJ - Req
Rj - St
RJ - U
RJ - J
U - R
--------------------------
public void Createrequest(string surname, string phone, string email, string device, string description, string comment)
{
    sqlConnection.Close();
    sqlConnection = new SqlConnection("Data Source=QULLLAIA\\SQLEXPRESS;Initial Catalog=testDemoDB;Integrated Security=True; MultipleActiveResultSets=True");
    sqlConnection.Open();
    SqlCommand sqlCommand = new SqlCommand(
      $"insert into [Request] values({GetLastId()+1}, {surname}, {phone}, {email}, {device}, {description}, {comment}, NULL, NULL, '{DateTime.Now.Date}', NULL)",
      sqlConnection
      );
    sqlCommand.ExecuteNonQuery();
}
---------------------------
public int GetLastId()
{
    sqlConnection = new SqlConnection("Data Source=QULLLAIA\\SQLEXPRESS;Initial Catalog=testDemoDB;Integrated Security=True");
    sqlConnection.Open();
    SqlCommand sqlCommand = new SqlCommand(
      "select * from [Request]",
      sqlConnection
      );
    SqlDataReader reader = sqlCommand.ExecuteReader();
    int id = 1;
    while (reader.Read())
    {
        id = int.Parse(reader[0].ToString());
    }
    reader.Close();
    return id;
}
------------------------------------
НАЗНАЧЕНИЕ ПРОГРАММЫ
1.1 Сведения о назначении программы 
1.2 Функциональное назначение программы 
1.3 Эксплуатационное назначение Программа должна эксплуатироваться на любом пользовательском компьютере с операционной системой Windows. Конечными пользователями программы могут являться как дети, так и взрослые. 
1.4 Состав функций программы Программа выполняет перечисленные ниже функции: 
УСЛОВИЯ ВЫПОЛНЕНИЯ ПРОГРАММЫ
. Персональный компьютер должен быть оснащён следующим программным обеспечением: − операционная система семейства Windows; − программный пакет .NET Framework; − драйвера программного обеспечения Microsoft SQL Server для работы с базами данных
ВЫПОЛНЕНИЕ ПРОГРАММЫ
СООБЩЕНИЯ ОПЕРАТОРУ
---------------------------------------------------
BACKUP DATABASE User10 TO DISK = N'C:\backup.bak'
INSERT INTO [USER] VALUES ('')
---------------------------------------------------
 private void SignIn_button_Click(object sender, RoutedEventArgs e)
 {
     if (Login.Text == "111" && Password.Text == "111")
     {
         MessageBox.Show("Пользователь FFFFайден", "Ошибка входа", MessageBoxButton.OK, MessageBoxImage.Error);
         NavigationService.Navigate(new MainControlPage());
     }
 }
---------------------------
 <ComboBox Height="23" Name="comboBox1" Width="120" Margin="363,282,317,145">
     <ComboBoxItem Content="Alice"/>
     <ComboBoxItem Content="Bob"/>
     <ComboBoxItem Content="Charlie"/>
 </ComboBox>
------------------------------
using QRCoder;
using System.Windows.Media.Imaging

var generator = new QRCodeGenerator();
var code = generator.CreateQrCode("", QRCodeGenerator.ECCLevel.H);
var image = new PngByteQRCode(code);

var qrCodeImage = image.GetGraphic(40);

var bitmap = new BitmapImage();
bitmap.BeginInit();
bitmap.StreamSource = new MemoryStream(qrCodeImage);
bitmap.EndInit();